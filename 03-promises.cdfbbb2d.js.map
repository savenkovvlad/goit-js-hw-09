{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SA+BA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KAELN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,EAvCA,CACXQ,KAAMC,SAASC,cAAc,WAG1BF,KAAKG,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAEC,iBACF,IACEC,UAAYd,MAAAe,EAAKC,KAAEA,EAAIC,OAAEA,IACvBL,EAAEM,cAENH,EAAQI,OAAOJ,EAAMK,OACrBJ,EAAOG,OAAOH,EAAKI,OACnBH,EAASE,OAAOF,EAAOG,OAEvB,IAAK,IAAIC,EAAI,EAAGA,GAAKJ,EAAQI,GAAK,EAChCvB,EAAeuB,EAAGN,GACjBO,MAAK,EAACvB,SAACA,EAAQC,MAAEA,MAClBuB,EAAA3B,GAAS4B,OAAOC,QAAQ,uBAAqB1B,QAAiBC,MAAU,IAEzE0B,OAAM,EAAC3B,SAAEA,EAAQC,MAAEA,MAClBuB,EAAA3B,GAAS4B,OAAOG,QAAQ,sBAAoB5B,QAAeC,MAAU,IAEzEe,GAASC,EAEPJ,EAAEM,cAAcU,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from \"notiflix\";\n\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', onPushSubmit);\n\nfunction onPushSubmit(e) {\n  e.preventDefault();\n  let {\n    elements: { delay, step, amount },\n  } = e.currentTarget;\n  \n  delay = Number(delay.value);\n  step = Number(step.value);\n  amount = Number(amount.value);\n  \n  for (let i = 1; i <= amount; i += 1){\n    createPromise( i, delay )\n    .then(({position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\ndelay += step;\n  }\n  e.currentTarget.reset();\n};\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      \n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n              }\n    }, delay);   \n  }); \n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","form","document","querySelector","addEventListener","e","preventDefault","elements","delay1","step","amount","currentTarget","Number","value","i","then","$parcel$interopDefault","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.cdfbbb2d.js.map"}