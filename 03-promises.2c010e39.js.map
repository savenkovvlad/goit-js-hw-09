{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SA+BA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WAELN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,KAvCM,CACXQ,KAAMC,SAASC,cAAc,WAG1BF,KAAKG,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAEC,iBACF,IAEmBC,EAAfF,EAAEG,cADJC,SAAYC,EAAKH,EAALd,MAAOkB,EAAIJ,EAAJI,KAAMC,EAAML,EAANK,OAG3BF,EAAQG,OAAOH,EAAMI,OACrBH,EAAOE,OAAOF,EAAKG,OACnBF,EAASC,OAAOD,EAAOE,OAEvB,IAAK,IAAIC,EAAI,EAAGA,GAAKH,EAAQG,GAAK,EAChCxB,EAAewB,EAAGL,GACjBM,MAAK,SAAAC,G,IAAEzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MAClByB,EAAA7B,GAAS8B,OAAOC,QAAQ,uBAAwCC,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,M,IAEvE6B,OAAM,SAAAL,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MAClByB,EAAA7B,GAAS8B,OAAOI,QAAQ,sBAAqCF,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,M,IAEvEiB,GAASC,EAEPN,EAAEG,cAAcgB,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from \"notiflix\";\n\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', onPushSubmit);\n\nfunction onPushSubmit(e) {\n  e.preventDefault();\n  let {\n    elements: { delay, step, amount },\n  } = e.currentTarget;\n  \n  delay = Number(delay.value);\n  step = Number(step.value);\n  amount = Number(amount.value);\n  \n  for (let i = 1; i <= amount; i += 1){\n    createPromise( i, delay )\n    .then(({position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\ndelay += step;\n  }\n  e.currentTarget.reset();\n};\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      \n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n              }\n    }, delay);   \n  }); \n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","form","document","querySelector","addEventListener","e","preventDefault","_elements","currentTarget","elements","delay1","step","amount","Number","value","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","reset"],"version":3,"file":"03-promises.2c010e39.js.map"}